import sys, os

env = Environment(
    tools=["default"], PLATFORM="", compiledb_file="godot-cpp/compile_commands.json"
)

# check if godot-cpp is git-inited
if not (os.path.isdir("godot-cpp") and os.listdir("godot-cpp")):
    print(
        "Ya dingus did not initialize the godot-cpp submodule. Run this command:\n\ngit submodule update --init --recursive\n",
        file=sys.stderr,
    )
    sys.exit(1)

# build godot-cpp
env = SConscript("godot-cpp/SConstruct", "env")

# now build our modules
SConscript(["magix_vm/SConstruct"], "env")

# canonical build for compile_commands.json
if env["platform"] == "linux" and env["arch"] == "x86_64" and env["target"] == "editor":
    env.Tool("compilation_db")
    env.CompilationDatabase("unfiltered.compile_commands.json")
    cpdb = env.Command(
        target="compile_commands.json",
        source="unfiltered.compile_commands.json",
        action="""jq < $SOURCES '[ .[] | select(.file | startswith("godot-cpp/") | not) ]' | sed -E 's#-fno-gnu-unique##g' > $TARGET""",
    )
    Default(cpdb)
